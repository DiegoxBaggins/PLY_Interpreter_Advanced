
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALESDISTINTOSleftMAYORIGUALMENORIGUALMAYORMENORleftMASMENOSleftMULTDIVrightNOTrightUMINUSAND BOOL CHAR COMA DISTINTOS DIV DOSPUNTOS ELSE ELSEIF END FALSE FLOAT64 FLOATID ID IF IGUAL IGUALES INT64 INTID MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MULT NOT NULO OR PARDER PARIZQ PRINT PRINTLN PUNTO PUNTOCOMA STRING STRINGID TRUEinicio : instruccionesinstrucciones : instrucciones instruccion\n                    | instruccioninstruccion  : printINS PUNTOCOMA\n                    | ifINS PUNTOCOMAsentencia : instruccionesprintINS  : PRINTLN PARIZQ expresion PARDERprintINS  : PRINT PARIZQ expresion PARDERifINS : IF expresion sentencia END\n             | IF expresion sentencia ELSE sentencia END\n             | IF expresion sentencia elseIfLista ENDelseIfLista   : ELSEIF expresion sentencia\n                     | ELSEIF expresion sentencia ELSE sentencia\n                     | ELSEIF expresion sentencia elseIfListaexpresion    : MENOS expresion %prec UMINUS\n                    | NOT expresion %prec UMINUS\n\n                    | expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion MULT expresion\n                    | expresion DIV expresion\n                    | expresion MAYOR expresion\n                    | expresion MENOR expresion\n                    | expresion MAYORIGUAL expresion\n                    | expresion MENORIGUAL expresion\n                    | expresion IGUALES expresion\n                    | expresion DISTINTOS expresion\n\n                    | expresion OR expresion\n                    | expresion AND expresion\n                    | expValorexpValor : PARIZQ expresion PARDER\n                | INTID\n                | FLOATID\n                | STRINGID\n                | TRUE\n                | FALSE'
    
_lr_action_items = {'PRINTLN':([0,2,3,9,10,11,14,17,19,20,21,22,23,39,40,41,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,],[6,6,-3,-2,-4,-5,6,-29,-31,-32,-33,-34,-35,6,-15,-16,6,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-30,6,6,]),'PRINT':([0,2,3,9,10,11,14,17,19,20,21,22,23,39,40,41,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,],[7,7,-3,-2,-4,-5,7,-29,-31,-32,-33,-34,-35,7,-15,-16,7,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-30,7,7,]),'IF':([0,2,3,9,10,11,14,17,19,20,21,22,23,39,40,41,46,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,],[8,8,-3,-2,-4,-5,8,-29,-31,-32,-33,-34,-35,8,-15,-16,8,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-30,8,8,]),'$end':([1,2,3,9,10,11,],[0,-1,-3,-2,-4,-5,]),'END':([3,9,10,11,26,39,47,62,66,68,69,],[-3,-2,-4,-5,45,-6,63,65,-12,-14,-13,]),'ELSE':([3,9,10,11,26,39,66,],[-3,-2,-4,-5,46,-6,67,]),'ELSEIF':([3,9,10,11,26,39,66,],[-3,-2,-4,-5,48,-6,48,]),'PUNTOCOMA':([4,5,43,44,45,63,65,],[10,11,-7,-8,-9,-11,-10,]),'PARIZQ':([6,7,8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[12,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'MENOS':([8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[15,15,15,28,15,15,-29,15,-31,-32,-33,-34,-35,28,28,15,15,15,15,15,15,15,15,15,15,15,15,-15,-16,28,15,-17,-18,-19,-20,28,28,28,28,28,28,28,28,-30,28,]),'NOT':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'INTID':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'FLOATID':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'STRINGID':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'TRUE':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'MAS':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[27,-29,-31,-32,-33,-34,-35,27,27,-15,-16,27,-17,-18,-19,-20,27,27,27,27,27,27,27,27,-30,27,]),'MULT':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[29,-29,-31,-32,-33,-34,-35,29,29,-15,-16,29,29,29,-19,-20,29,29,29,29,29,29,29,29,-30,29,]),'DIV':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[30,-29,-31,-32,-33,-34,-35,30,30,-15,-16,30,30,30,-19,-20,30,30,30,30,30,30,30,30,-30,30,]),'MAYOR':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[31,-29,-31,-32,-33,-34,-35,31,31,-15,-16,31,-17,-18,-19,-20,-21,-22,-23,-24,31,31,31,31,-30,31,]),'MENOR':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[32,-29,-31,-32,-33,-34,-35,32,32,-15,-16,32,-17,-18,-19,-20,-21,-22,-23,-24,32,32,32,32,-30,32,]),'MAYORIGUAL':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[33,-29,-31,-32,-33,-34,-35,33,33,-15,-16,33,-17,-18,-19,-20,-21,-22,-23,-24,33,33,33,33,-30,33,]),'MENORIGUAL':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[34,-29,-31,-32,-33,-34,-35,34,34,-15,-16,34,-17,-18,-19,-20,-21,-22,-23,-24,34,34,34,34,-30,34,]),'IGUALES':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[35,-29,-31,-32,-33,-34,-35,35,35,-15,-16,35,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,35,35,-30,35,]),'DISTINTOS':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[36,-29,-31,-32,-33,-34,-35,36,36,-15,-16,36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,36,36,-30,36,]),'OR':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[37,-29,-31,-32,-33,-34,-35,37,37,-15,-16,37,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-30,37,]),'AND':([14,17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,64,],[38,-29,-31,-32,-33,-34,-35,38,38,-15,-16,38,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,38,-28,-30,38,]),'PARDER':([17,19,20,21,22,23,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,],[-29,-31,-32,-33,-34,-35,43,44,-15,-16,61,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,14,46,64,67,],[2,39,39,39,39,]),'instruccion':([0,2,14,39,46,64,67,],[3,9,3,9,3,3,3,]),'printINS':([0,2,14,39,46,64,67,],[4,4,4,4,4,4,4,]),'ifINS':([0,2,14,39,46,64,67,],[5,5,5,5,5,5,5,]),'expresion':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[14,24,25,40,41,42,49,50,51,52,53,54,55,56,57,58,59,60,64,]),'expValor':([8,12,13,15,16,18,27,28,29,30,31,32,33,34,35,36,37,38,48,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sentencia':([14,46,64,67,],[26,62,66,69,]),'elseIfLista':([26,66,],[47,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_start','Grammar.py',119),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','Grammar.py',125),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','Grammar.py',126),
  ('instruccion -> printINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',135),
  ('instruccion -> ifINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',136),
  ('sentencia -> instrucciones','sentencia',1,'p_sentencia','Grammar.py',142),
  ('printINS -> PRINTLN PARIZQ expresion PARDER','printINS',4,'p_printlnINS','Grammar.py',148),
  ('printINS -> PRINT PARIZQ expresion PARDER','printINS',4,'p_printINS','Grammar.py',153),
  ('ifINS -> IF expresion sentencia END','ifINS',4,'p_ifINS','Grammar.py',159),
  ('ifINS -> IF expresion sentencia ELSE sentencia END','ifINS',6,'p_ifINS','Grammar.py',160),
  ('ifINS -> IF expresion sentencia elseIfLista END','ifINS',5,'p_ifINS','Grammar.py',161),
  ('elseIfLista -> ELSEIF expresion sentencia','elseIfLista',3,'p_elseIfLista','Grammar.py',171),
  ('elseIfLista -> ELSEIF expresion sentencia ELSE sentencia','elseIfLista',5,'p_elseIfLista','Grammar.py',172),
  ('elseIfLista -> ELSEIF expresion sentencia elseIfLista','elseIfLista',4,'p_elseIfLista','Grammar.py',173),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion','Grammar.py',183),
  ('expresion -> NOT expresion','expresion',2,'p_expresion','Grammar.py',184),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion','Grammar.py',186),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion','Grammar.py',187),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion','Grammar.py',188),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion','Grammar.py',189),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion','Grammar.py',190),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion','Grammar.py',191),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion','Grammar.py',192),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion','Grammar.py',193),
  ('expresion -> expresion IGUALES expresion','expresion',3,'p_expresion','Grammar.py',194),
  ('expresion -> expresion DISTINTOS expresion','expresion',3,'p_expresion','Grammar.py',195),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Grammar.py',197),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Grammar.py',198),
  ('expresion -> expValor','expresion',1,'p_expresion','Grammar.py',199),
  ('expValor -> PARIZQ expresion PARDER','expValor',3,'p_expValor','Grammar.py',236),
  ('expValor -> INTID','expValor',1,'p_expValor','Grammar.py',237),
  ('expValor -> FLOATID','expValor',1,'p_expValor','Grammar.py',238),
  ('expValor -> STRINGID','expValor',1,'p_expValor','Grammar.py',239),
  ('expValor -> TRUE','expValor',1,'p_expValor','Grammar.py',240),
  ('expValor -> FALSE','expValor',1,'p_expValor','Grammar.py',241),
]
