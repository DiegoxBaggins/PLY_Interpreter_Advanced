
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUALESDISTINTOSleftMAYORIGUALMENORIGUALMAYORMENORleftMASMENOSleftMULTDIVMODrightPOTrightNOTrightUMINUSleftPARIZQPARDERLLAVIZQLLAVDERAND BOOL CHAR CHARID COMA CORDER CORIZQ COS DISTINTOS DIV DOSPUNTOS ELSE ELSEIF END FALSE FLOAT FLOAT64 FLOATID FUNCTION GLOBAL ID IF IGUAL IGUALES INT64 INTID LLAVDER LLAVIZQ LOCAL LOG LOG10 LOWERCASE MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD MULT NOT NULO OR PARDER PARIZQ PARSE POT PRINT PRINTLN PUNTO PUNTOCOMA RETURN SIN SQRT STRING STRINGID TAN TRUE TRUNC TYPEOF UPPERCASEinicio : instruccionesglbinstruccionesglb : instruccionesglb instruccionglb\n                        | instruccionglbinstruccionglb  : funcionINS PUNTOCOMA\n                       | declaracionglb PUNTOCOMA\n                       | printINS PUNTOCOMA\n                       | llamadaFunc PUNTOCOMA\n                       | ifINS PUNTOCOMAdeclaracionglb : ID\n                      | ID IGUAL expresion\n                      | ID IGUAL expresion DOSPUNTOS DOSPUNTOS tiposfuncionINS : FUNCTION ID PARIZQ PARDER sentencia END\n                  | FUNCTION ID PARIZQ params PARDER sentencia ENDparams : params COMA ID\n              | IDllamadaFunc : ID PARIZQ PARDER\n                   | ID PARIZQ listParams PARDERlistParams :  listParams COMA expresion\n                  | expresionreturnINS : RETURN\n                 | RETURN expresioninstrucciones : instrucciones instruccion\n                    | instruccioninstruccion  : printINS PUNTOCOMA\n                    | ifINS PUNTOCOMA\n                    | declaracionINS PUNTOCOMA\n                    | llamadaFunc PUNTOCOMA\n                    | returnINS PUNTOCOMAsentencia : instruccionesprintINS  : PRINTLN PARIZQ expresion PARDERprintINS  : PRINT PARIZQ expresion PARDERdeclaracionINS : ID\n                      | ID IGUAL expresion\n                      | ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos\n                      | accesos ID\n                      | accesos ID IGUAL expresion\n                      | accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipostipos : INT64\n             | FLOAT64\n             | STRING\n             | BOOL\n             | CHARaccesos : LOCAL\n               | GLOBALifINS : IF expresion sentencia END\n             | IF expresion sentencia ELSE sentencia END\n             | IF expresion sentencia elseIfLista ENDelseIfLista   : ELSEIF expresion sentencia\n                     | ELSEIF expresion sentencia ELSE sentencia\n                     | ELSEIF expresion sentencia elseIfListaexpresion    : MENOS expresion %prec UMINUS\n                    | NOT expresion %prec UMINUS\n\n                    | expresion MAS expresion\n                    | expresion MENOS expresion\n                    | expresion MULT expresion\n                    | expresion DIV expresion\n                    | expresion MOD expresion\n                    | expresion POT expresion\n\n                    | expresion MAYOR expresion\n                    | expresion MENOR expresion\n                    | expresion MAYORIGUAL expresion\n                    | expresion MENORIGUAL expresion\n                    | expresion IGUALES expresion\n                    | expresion DISTINTOS expresion\n\n                    | expresion OR expresion\n                    | expresion AND expresion\n                    | expValorexpValor : PARIZQ expresion PARDER\n                | INTID\n                | FLOATID\n                | STRINGID\n                | expCHAR\n                | expNativas\n                | TRUE\n                | FALSE\n                | ID\n                | llamadaFuncexpCHAR : CHARIDexpNativas : LOG10 PARIZQ expresion PARDER\n                  | LOG PARIZQ expresion COMA expresion PARDER\n                  | SIN PARIZQ expresion PARDER\n                  | COS PARIZQ expresion PARDER\n                  | TAN PARIZQ expresion PARDER\n                  | SQRT PARIZQ expresion PARDER\n                  | UPPERCASE PARIZQ expresion PARDER\n                  | LOWERCASE PARIZQ expresion PARDER\n                  | PARSE PARIZQ INT64 COMA expresion PARDER\n                  | PARSE PARIZQ FLOAT64 COMA expresion PARDER\n                  | TRUNC PARIZQ INT64 COMA expresion PARDER\n                  | FLOAT PARIZQ expresion PARDER\n                  | STRING PARIZQ expresion PARDER\n                  | TYPEOF PARIZQ expresion PARDER'
    
_lr_action_items = {'FUNCTION':([0,2,3,14,15,16,17,18,19,],[9,9,-3,-2,-4,-5,-6,-7,-8,]),'ID':([0,2,3,9,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,53,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,83,84,85,86,87,88,90,91,92,93,94,95,96,97,100,101,102,104,107,108,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,154,155,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,195,199,200,201,202,],[10,10,-3,20,37,-2,-4,-5,-6,-7,-8,37,37,37,37,82,37,37,-67,37,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,103,-16,37,37,37,37,37,37,37,37,37,37,37,37,37,37,82,-23,136,37,-43,-44,-51,-52,37,37,37,37,37,37,37,37,37,37,37,82,-17,37,82,37,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,37,-68,82,179,82,37,-79,37,-81,-82,-83,-84,-85,-86,37,37,37,-90,-91,-92,82,-80,-87,-88,-89,]),'PRINTLN':([0,2,3,14,15,16,17,18,19,25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[11,11,-3,-2,-4,-5,-6,-7,-8,11,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,11,-23,-51,-52,11,-17,11,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,11,11,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,11,-80,-87,-88,-89,]),'PRINT':([0,2,3,14,15,16,17,18,19,25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[12,12,-3,-2,-4,-5,-6,-7,-8,12,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,12,-23,-51,-52,12,-17,12,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,12,12,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,12,-80,-87,-88,-89,]),'IF':([0,2,3,14,15,16,17,18,19,25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[13,13,-3,-2,-4,-5,-6,-7,-8,13,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,13,-23,-51,-52,13,-17,13,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,13,13,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,13,-80,-87,-88,-89,]),'$end':([1,2,3,14,15,16,17,18,19,],[0,-1,-3,-2,-4,-5,-6,-7,-8,]),'PUNTOCOMA':([4,5,6,7,8,10,28,30,31,32,33,34,35,36,37,38,39,54,55,77,78,79,80,81,82,84,87,88,107,109,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,136,137,138,159,161,163,165,166,167,168,169,170,174,175,176,177,180,181,182,183,184,185,186,189,194,199,200,201,202,204,206,],[15,16,17,18,19,-9,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-10,-16,130,131,132,133,134,-32,-20,-51,-52,-17,-30,-31,-45,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-35,-21,-68,-47,-33,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,-12,-11,-38,-39,-40,-41,-42,-46,-36,-13,-80,-87,-88,-89,-34,-37,]),'IGUAL':([10,82,136,],[21,135,162,]),'PARIZQ':([10,11,12,13,20,21,22,23,24,26,27,29,37,40,41,42,43,44,45,46,47,48,49,50,51,52,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[22,23,24,29,53,29,29,29,29,29,29,29,22,90,91,92,93,94,95,96,97,98,99,100,101,102,29,29,29,29,29,29,29,29,29,29,29,29,29,29,22,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'MENOS':([13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,87,88,89,90,91,92,93,94,95,96,97,100,101,102,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,135,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,189,190,191,192,193,199,200,201,202,],[26,26,26,26,26,62,26,26,-67,26,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,62,-16,62,62,62,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-51,-52,62,26,26,26,26,26,26,26,26,26,26,26,-17,26,26,-53,-54,-55,-56,-57,-58,62,62,62,62,62,62,62,62,26,62,-68,62,62,62,62,62,62,62,62,62,62,62,62,62,62,26,-79,26,-81,-82,-83,-84,-85,-86,26,26,26,-90,-91,-92,62,62,62,62,62,-80,-87,-88,-89,]),'NOT':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'INTID':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FLOATID':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRINGID':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TRUE':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FALSE':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'CHARID':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LOG10':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LOG':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'SIN':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'COS':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TAN':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'SQRT':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'UPPERCASE':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'LOWERCASE':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'PARSE':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TRUNC':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'FLOAT':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,156,162,164,171,172,173,197,205,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,183,51,51,51,51,51,183,183,]),'TYPEOF':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'PARDER':([22,28,30,31,32,33,34,35,36,37,38,39,53,55,56,57,58,59,87,88,89,103,105,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,138,139,141,142,143,144,145,146,150,151,152,157,163,165,166,167,168,169,170,174,175,176,179,190,191,192,193,199,200,201,202,],[55,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,104,-16,107,-19,109,110,-51,-52,138,-15,154,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,163,165,166,167,168,169,170,174,175,176,-18,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,-14,199,200,201,202,-80,-87,-88,-89,]),'MAS':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[61,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,61,-16,61,61,61,-51,-52,61,-17,-53,-54,-55,-56,-57,-58,61,61,61,61,61,61,61,61,61,-68,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,61,61,61,61,61,-80,-87,-88,-89,]),'MULT':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[63,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,63,-16,63,63,63,-51,-52,63,-17,63,63,-55,-56,-57,-58,63,63,63,63,63,63,63,63,63,-68,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,63,63,63,63,63,-80,-87,-88,-89,]),'DIV':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[64,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,64,-16,64,64,64,-51,-52,64,-17,64,64,-55,-56,-57,-58,64,64,64,64,64,64,64,64,64,-68,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,64,64,64,64,64,-80,-87,-88,-89,]),'MOD':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[65,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,65,-16,65,65,65,-51,-52,65,-17,65,65,-55,-56,-57,-58,65,65,65,65,65,65,65,65,65,-68,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,65,65,65,65,65,-80,-87,-88,-89,]),'POT':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[66,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,66,-16,66,66,66,-51,-52,66,-17,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-68,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,66,66,66,66,66,-80,-87,-88,-89,]),'MAYOR':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[67,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,67,-16,67,67,67,-51,-52,67,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,67,67,67,67,67,-68,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,67,67,67,67,67,-80,-87,-88,-89,]),'MENOR':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[68,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,68,-16,68,68,68,-51,-52,68,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,68,68,68,68,68,-68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,68,68,68,68,68,-80,-87,-88,-89,]),'MAYORIGUAL':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[69,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,69,-16,69,69,69,-51,-52,69,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,69,69,69,69,69,-68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,69,69,69,69,69,-80,-87,-88,-89,]),'MENORIGUAL':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[70,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,70,-16,70,70,70,-51,-52,70,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,70,70,70,70,70,-68,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,70,70,70,70,70,-80,-87,-88,-89,]),'IGUALES':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[71,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,71,-16,71,71,71,-51,-52,71,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,71,71,71,-68,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,71,71,71,71,71,-80,-87,-88,-89,]),'DISTINTOS':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[72,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,72,-16,72,72,72,-51,-52,72,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,72,72,72,-68,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,72,72,72,72,72,-80,-87,-88,-89,]),'OR':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[73,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,73,-16,73,73,73,-51,-52,73,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,73,-68,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,73,73,73,73,73,-80,-87,-88,-89,]),'AND':([25,28,30,31,32,33,34,35,36,37,38,39,54,55,57,58,59,87,88,89,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,138,139,140,141,142,143,144,145,146,150,151,152,157,160,161,163,165,166,167,168,169,170,174,175,176,189,190,191,192,193,199,200,201,202,],[74,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,74,-16,74,74,74,-51,-52,74,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,74,-66,74,-68,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,74,74,74,74,74,-80,-87,-88,-89,]),'RETURN':([25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[84,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,84,-23,-51,-52,84,-17,84,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,84,84,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,84,-80,-87,-88,-89,]),'LOCAL':([25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[85,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,85,-23,-51,-52,85,-17,85,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,85,85,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,85,-80,-87,-88,-89,]),'GLOBAL':([25,28,30,31,32,33,34,35,36,37,38,39,55,75,76,87,88,104,107,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,154,160,163,165,166,167,168,169,170,174,175,176,195,199,200,201,202,],[86,-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,86,-23,-51,-52,86,-17,86,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-22,-24,-25,-26,-27,-28,-68,86,86,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,86,-80,-87,-88,-89,]),'DOSPUNTOS':([28,30,31,32,33,34,35,36,37,38,39,54,55,87,88,106,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,138,161,163,165,166,167,168,169,170,174,175,176,188,189,198,199,200,201,202,],[-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,106,-16,-51,-52,156,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,188,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,197,198,205,-80,-87,-88,-89,]),'COMA':([28,30,31,32,33,34,35,36,37,38,39,55,56,57,87,88,103,105,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,138,140,147,148,149,157,163,165,166,167,168,169,170,174,175,176,179,199,200,201,202,],[-67,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-16,108,-19,-51,-52,-15,155,-17,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,164,171,172,173,-18,-79,-81,-82,-83,-84,-85,-86,-90,-91,-92,-14,-80,-87,-88,-89,]),'END':([60,75,76,113,129,130,131,132,133,134,153,158,178,187,196,203,],[111,-29,-23,159,-22,-24,-25,-26,-27,-28,177,186,194,-48,-50,-49,]),'ELSE':([60,75,76,129,130,131,132,133,134,187,],[112,-29,-23,-22,-24,-25,-26,-27,-28,195,]),'ELSEIF':([60,75,76,129,130,131,132,133,134,187,],[114,-29,-23,-22,-24,-25,-26,-27,-28,114,]),'INT64':([98,99,156,197,205,],[147,149,181,181,181,]),'FLOAT64':([98,156,197,205,],[148,182,182,182,]),'BOOL':([156,197,205,],[184,184,184,]),'CHAR':([156,197,205,],[185,185,185,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instruccionesglb':([0,],[2,]),'instruccionglb':([0,2,],[3,14,]),'funcionINS':([0,2,],[4,4,]),'declaracionglb':([0,2,],[5,5,]),'printINS':([0,2,25,75,104,112,154,160,195,],[6,6,77,77,77,77,77,77,77,]),'llamadaFunc':([0,2,13,21,22,23,24,25,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,84,90,91,92,93,94,95,96,97,100,101,102,104,108,112,114,135,154,160,162,164,171,172,173,195,],[7,7,38,38,38,38,38,80,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,80,38,38,38,38,38,38,38,38,38,38,38,38,80,38,80,38,38,80,80,38,38,38,38,38,80,]),'ifINS':([0,2,25,75,104,112,154,160,195,],[8,8,78,78,78,78,78,78,78,]),'expresion':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[25,54,57,58,59,87,88,89,115,116,117,118,119,120,121,122,123,124,125,126,127,128,137,139,140,141,142,143,144,145,146,150,151,152,157,160,161,189,190,191,192,193,]),'expValor':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expCHAR':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expNativas':([13,21,22,23,24,26,27,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,84,90,91,92,93,94,95,96,97,100,101,102,108,114,135,162,164,171,172,173,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'listParams':([22,],[56,]),'sentencia':([25,104,112,154,160,195,],[60,153,158,178,187,203,]),'instrucciones':([25,104,112,154,160,195,],[75,75,75,75,75,75,]),'instruccion':([25,75,104,112,154,160,195,],[76,129,76,76,76,76,76,]),'declaracionINS':([25,75,104,112,154,160,195,],[79,79,79,79,79,79,79,]),'returnINS':([25,75,104,112,154,160,195,],[81,81,81,81,81,81,81,]),'accesos':([25,75,104,112,154,160,195,],[83,83,83,83,83,83,83,]),'params':([53,],[105,]),'elseIfLista':([60,187,],[113,196,]),'tipos':([156,197,205,],[180,204,206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instruccionesglb','inicio',1,'p_start','Grammar.py',145),
  ('instruccionesglb -> instruccionesglb instruccionglb','instruccionesglb',2,'p_instruccionesglb','Grammar.py',151),
  ('instruccionesglb -> instruccionglb','instruccionesglb',1,'p_instruccionesglb','Grammar.py',152),
  ('instruccionglb -> funcionINS PUNTOCOMA','instruccionglb',2,'p_instruccionglb','Grammar.py',161),
  ('instruccionglb -> declaracionglb PUNTOCOMA','instruccionglb',2,'p_instruccionglb','Grammar.py',162),
  ('instruccionglb -> printINS PUNTOCOMA','instruccionglb',2,'p_instruccionglb','Grammar.py',163),
  ('instruccionglb -> llamadaFunc PUNTOCOMA','instruccionglb',2,'p_instruccionglb','Grammar.py',164),
  ('instruccionglb -> ifINS PUNTOCOMA','instruccionglb',2,'p_instruccionglb','Grammar.py',165),
  ('declaracionglb -> ID','declaracionglb',1,'p_declaracionglb','Grammar.py',170),
  ('declaracionglb -> ID IGUAL expresion','declaracionglb',3,'p_declaracionglb','Grammar.py',171),
  ('declaracionglb -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos','declaracionglb',6,'p_declaracionglb','Grammar.py',172),
  ('funcionINS -> FUNCTION ID PARIZQ PARDER sentencia END','funcionINS',6,'p_funcionINS','Grammar.py',182),
  ('funcionINS -> FUNCTION ID PARIZQ params PARDER sentencia END','funcionINS',7,'p_funcionINS','Grammar.py',183),
  ('params -> params COMA ID','params',3,'p_decParams','Grammar.py',191),
  ('params -> ID','params',1,'p_decParams','Grammar.py',192),
  ('llamadaFunc -> ID PARIZQ PARDER','llamadaFunc',3,'p_llamadaFunc','Grammar.py',201),
  ('llamadaFunc -> ID PARIZQ listParams PARDER','llamadaFunc',4,'p_llamadaFunc','Grammar.py',202),
  ('listParams -> listParams COMA expresion','listParams',3,'p_llamadaPar','Grammar.py',210),
  ('listParams -> expresion','listParams',1,'p_llamadaPar','Grammar.py',211),
  ('returnINS -> RETURN','returnINS',1,'p_return','Grammar.py',220),
  ('returnINS -> RETURN expresion','returnINS',2,'p_return','Grammar.py',221),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','Grammar.py',229),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','Grammar.py',230),
  ('instruccion -> printINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',239),
  ('instruccion -> ifINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',240),
  ('instruccion -> declaracionINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',241),
  ('instruccion -> llamadaFunc PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',242),
  ('instruccion -> returnINS PUNTOCOMA','instruccion',2,'p_instruccion','Grammar.py',243),
  ('sentencia -> instrucciones','sentencia',1,'p_sentencia','Grammar.py',249),
  ('printINS -> PRINTLN PARIZQ expresion PARDER','printINS',4,'p_printlnINS','Grammar.py',255),
  ('printINS -> PRINT PARIZQ expresion PARDER','printINS',4,'p_printINS','Grammar.py',260),
  ('declaracionINS -> ID','declaracionINS',1,'p_declaracionINS','Grammar.py',265),
  ('declaracionINS -> ID IGUAL expresion','declaracionINS',3,'p_declaracionINS','Grammar.py',266),
  ('declaracionINS -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos','declaracionINS',6,'p_declaracionINS','Grammar.py',267),
  ('declaracionINS -> accesos ID','declaracionINS',2,'p_declaracionINS','Grammar.py',268),
  ('declaracionINS -> accesos ID IGUAL expresion','declaracionINS',4,'p_declaracionINS','Grammar.py',269),
  ('declaracionINS -> accesos ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipos','declaracionINS',7,'p_declaracionINS','Grammar.py',270),
  ('tipos -> INT64','tipos',1,'p_tipos','Grammar.py',286),
  ('tipos -> FLOAT64','tipos',1,'p_tipos','Grammar.py',287),
  ('tipos -> STRING','tipos',1,'p_tipos','Grammar.py',288),
  ('tipos -> BOOL','tipos',1,'p_tipos','Grammar.py',289),
  ('tipos -> CHAR','tipos',1,'p_tipos','Grammar.py',290),
  ('accesos -> LOCAL','accesos',1,'p_accesos','Grammar.py',305),
  ('accesos -> GLOBAL','accesos',1,'p_accesos','Grammar.py',306),
  ('ifINS -> IF expresion sentencia END','ifINS',4,'p_ifINS','Grammar.py',316),
  ('ifINS -> IF expresion sentencia ELSE sentencia END','ifINS',6,'p_ifINS','Grammar.py',317),
  ('ifINS -> IF expresion sentencia elseIfLista END','ifINS',5,'p_ifINS','Grammar.py',318),
  ('elseIfLista -> ELSEIF expresion sentencia','elseIfLista',3,'p_elseIfLista','Grammar.py',328),
  ('elseIfLista -> ELSEIF expresion sentencia ELSE sentencia','elseIfLista',5,'p_elseIfLista','Grammar.py',329),
  ('elseIfLista -> ELSEIF expresion sentencia elseIfLista','elseIfLista',4,'p_elseIfLista','Grammar.py',330),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion','Grammar.py',340),
  ('expresion -> NOT expresion','expresion',2,'p_expresion','Grammar.py',341),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion','Grammar.py',343),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion','Grammar.py',344),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion','Grammar.py',345),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion','Grammar.py',346),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion','Grammar.py',347),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion','Grammar.py',348),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion','Grammar.py',350),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion','Grammar.py',351),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion','Grammar.py',352),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion','Grammar.py',353),
  ('expresion -> expresion IGUALES expresion','expresion',3,'p_expresion','Grammar.py',354),
  ('expresion -> expresion DISTINTOS expresion','expresion',3,'p_expresion','Grammar.py',355),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','Grammar.py',357),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','Grammar.py',358),
  ('expresion -> expValor','expresion',1,'p_expresion','Grammar.py',359),
  ('expValor -> PARIZQ expresion PARDER','expValor',3,'p_expValor','Grammar.py',400),
  ('expValor -> INTID','expValor',1,'p_expValor','Grammar.py',401),
  ('expValor -> FLOATID','expValor',1,'p_expValor','Grammar.py',402),
  ('expValor -> STRINGID','expValor',1,'p_expValor','Grammar.py',403),
  ('expValor -> expCHAR','expValor',1,'p_expValor','Grammar.py',404),
  ('expValor -> expNativas','expValor',1,'p_expValor','Grammar.py',405),
  ('expValor -> TRUE','expValor',1,'p_expValor','Grammar.py',406),
  ('expValor -> FALSE','expValor',1,'p_expValor','Grammar.py',407),
  ('expValor -> ID','expValor',1,'p_expValor','Grammar.py',408),
  ('expValor -> llamadaFunc','expValor',1,'p_expValor','Grammar.py',409),
  ('expCHAR -> CHARID','expCHAR',1,'p_CHARS','Grammar.py',432),
  ('expNativas -> LOG10 PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',437),
  ('expNativas -> LOG PARIZQ expresion COMA expresion PARDER','expNativas',6,'p_defNativas','Grammar.py',438),
  ('expNativas -> SIN PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',439),
  ('expNativas -> COS PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',440),
  ('expNativas -> TAN PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',441),
  ('expNativas -> SQRT PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',442),
  ('expNativas -> UPPERCASE PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',443),
  ('expNativas -> LOWERCASE PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',444),
  ('expNativas -> PARSE PARIZQ INT64 COMA expresion PARDER','expNativas',6,'p_defNativas','Grammar.py',445),
  ('expNativas -> PARSE PARIZQ FLOAT64 COMA expresion PARDER','expNativas',6,'p_defNativas','Grammar.py',446),
  ('expNativas -> TRUNC PARIZQ INT64 COMA expresion PARDER','expNativas',6,'p_defNativas','Grammar.py',447),
  ('expNativas -> FLOAT PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',448),
  ('expNativas -> STRING PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',449),
  ('expNativas -> TYPEOF PARIZQ expresion PARDER','expNativas',4,'p_defNativas','Grammar.py',450),
]
